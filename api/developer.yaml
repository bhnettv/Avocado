openapi: 3.0.0
info:
  version: 1.0.0
  title: Ô∏èüñ•Ô∏è Developer
  description: Paths and components
  contact:
    email: parkerkrhoyt@gmail.com
  license:
    name: MIT
externalDocs:
  description: Find out more about Avocado
  url: http://kevinhoyt.com
servers:
- url: http://localhost:3000/api
tags:
- name: üñ•Ô∏è Developer
  description: Individual developers - and advocates
paths:
  /developer:
    get:
      tags:
      - üñ•Ô∏è Developer
      summary: Read all developers
      operationId: getDevelopers
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Developer'
    post:
      tags:
      - üñ•Ô∏è Developer
      summary: Create a new developer
      operationId: createDeveloper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first:
                  type: string
                  example: Kevin
                last:
                  type: string
                  example: Hoyt
                nickname:
                  type: string
                  example: The Dude
                email:
                  type: string
                  example: krhoyt@us.ibm.com
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Developer'
  /developer/{id}:
    parameters:
    - name: id
      in: path
      description: ID field for desired developer
      required: true
      schema:
        type: string
        format: uuid
    get:
      tags:
      - üñ•Ô∏è Developer
      summary: Read specific developer by ID
      operationId: getDeveloperByID
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Developer'
    put:
      tags:
      - üñ•Ô∏è Developer
      summary: Update specific developer by ID
      operationId: updateDeveloper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first:
                  type: string
                  example: Kevin
                last:
                  type: string
                  example: Hoyt
                nickname:
                  type: string
                  example: The Dude
                email:
                  type: string
                  example: krhoyt@us.ibm.com
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Developer'
    delete:
      tags:
      - üñ•Ô∏è Developer
      summary: Delete specific developer by ID
      operationId: deleteDeveloperByID
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  /developer/{id}/label:
    parameters:
    - name: id
      in: path
      description: ID field for desired developer
      required: true
      schema:
        type: string
        format: uuid
    get:
      tags:
      - üñ•Ô∏è Developer
      summary: Get labels associated with a developer by their ID
      operationId: getDeveloperLabelsByID
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    name:
                      type: string
                      example: 'IBM'
    post:
      tags:
      - üñ•Ô∏è Developer
      summary: Associate a specific developer with a label
      operationId: createDeveloperLabel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                label_id:
                  type: string
                  format: uuid
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  developer_id:
                    type: string
                    format: uuid
                  label_id:
                    type: string
                    format: uuid
  /developer/label/{id}:
    parameters:
    - name: id
      in: path
      description: ID field for desired label
      required: true
      schema:
        type: string
        format: uuid  
    get:
      tags:
      - üñ•Ô∏è Developer
      summary: Get developers associated with a specific label
      operationId: getDeveloperLabels
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    first:
                      type: string
                      example: 'Kevin'
                    last:
                      type: string
                      example: 'Hoyt'
                    nickname:
                      type: string
                      example: The Dude
                    email: 
                      type: string
                      example: krhoyt@us.ibm.com
components:
  schemas:
    Developer:
      required:
      - first
      - last
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        first:
          type: string
          example: Kevin
        last:
          type: string
          example: Hoyt
        nickname:
          type: string
          example: The Dude
        email:
          type: string
          example: krhoyt@us.ibm.com
