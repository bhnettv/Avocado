openapi: 3.0.0
info:
  version: 1.0.0
  title: ü•ë Avocado
  description: Developer Relations means relating to developers. There are millions of
    developers. How do you relate to them all? What are your metrics? Where do
    you even get started? Avocado is an out-of-the-box developer relations
    system, with your success at heart. ‚ù§Ô∏èÔ∏è
  contact:
    email: parkerkrhoyt@gmail.com
  license:
    name: MIT
externalDocs:
  description: Find out more about Avocado
  url: http://kevinhoyt.com
servers:
  - url: http://localhost:8000/api
tags:
  - name: üè∑Ô∏è Label
    description: Logical groupings of developers (tagging)
  - name: üñ•Ô∏è Developer
    description: Individual developers - and advocates
  - name: üñºÔ∏è Media
    description: Media (image files) associated with content aggregation
  - name: üìì Blog
    description: Blog feeds to aggregate
  - name: üìì üìù Blog Post
    description: Post made to a personal blog
  - name: üî• Dev
    description: DEV Community accounts to aggregate (Dev.to)
  - name: üî• üìù Dev Post
    description: Post made to a DEV Community account
  - name: üîÆ Medium
    description: Medium feeds to aggregate
  - name: üîÆ üìù Medium Post
    description: Post made to a Medium account
  - name: üß† Watson
    description: Watson machine learning features
  - name: üß∞ Utliity
    description: Tools used that are unrelated to storage
paths:
  /label:
    get:
      tags:
        - üè∑Ô∏è Label
      summary: Read all available labels
      operationId: getLabels
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - name
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    name:
                      type: string
                      example: IBM
    post:
      tags:
        - üè∑Ô∏è Label
      summary: Create a new label
      operationId: createLabel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: IBM
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1label/get/responses/200/content/application~1json/\
                  schema/items"
  "/label/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired label
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - üè∑Ô∏è Label
      summary: Read specific label by ID
      operationId: getLabelByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1label/get/responses/200/content/application~1json/\
                  schema/items"
    put:
      tags:
        - üè∑Ô∏è Label
      summary: Update specific label by ID
      operationId: updateLabel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: IBM
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1label/get/responses/200/content/application~1json/\
                  schema/items"
    delete:
      tags:
        - üè∑Ô∏è Label
      summary: Delete specific label by ID
      operationId: deleteLabelByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  /developer:
    get:
      tags:
        - üñ•Ô∏è Developer
      summary: Read all developers
      operationId: getDevelopers
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - first
                    - last
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    first:
                      type: string
                      example: Kevin
                    last:
                      type: string
                      example: Hoyt
                    nickname:
                      type: string
                      example: The Dude
                    email:
                      type: string
                      example: krhoyt@us.ibm.com
                    notes:
                      type: string
                      example: That creep can roll, man!
    post:
      tags:
        - üñ•Ô∏è Developer
      summary: Create a new developer
      operationId: createDeveloper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first:
                  type: string
                  example: Kevin
                last:
                  type: string
                  example: Hoyt
                nickname:
                  type: string
                  example: The Dude
                email:
                  type: string
                  example: krhoyt@us.ibm.com
                notes:
                  type: string
                  example: That creep can roll, man!
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1developer/get/responses/200/content/application~1j\
                  son/schema/items"
  "/developer/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired developer
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - üñ•Ô∏è Developer
      summary: Read specific developer by ID
      operationId: getDeveloperByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - first
                  - last
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  first:
                    type: string
                    example: Kevin
                  last:
                    type: string
                    example: Hoyt
                  nickname:
                    type: string
                    example: The Dude
                  email:
                    type: string
                    example: krhoyt@us.ibm.com
                  notes:
                    type: string
                    example: That creep can roll, man!
    put:
      tags:
        - üñ•Ô∏è Developer
      summary: Update specific developer by ID
      operationId: updateDeveloper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first:
                  type: string
                  example: Kevin
                last:
                  type: string
                  example: Hoyt
                nickname:
                  type: string
                  example: The Dude
                email:
                  type: string
                  example: krhoyt@us.ibm.com
                notes:
                  type: string
                  example: That creep can roll, man!
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1developer~1%7Bid%7D/get/responses/200/content/appl\
                  ication~1json/schema"
    delete:
      tags:
        - üñ•Ô∏è Developer
      summary: Delete specific developer by ID
      operationId: deleteDeveloperByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/developer/{id}/label":
    parameters:
      - name: id
        in: path
        description: ID field for desired developer
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - üñ•Ô∏è Developer
      summary: Get labels associated with a developer by their ID
      operationId: getDeveloperLabelsByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    name:
                      type: string
                      example: IBM
    post:
      tags:
        - üñ•Ô∏è Developer
      summary: Associate a specific developer with a label
      operationId: createDeveloperLabel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                label_id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  developer_id:
                    type: string
                    format: uuid
                  label_id:
                    type: string
                    format: uuid
  "/developer/label/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired label
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - üñ•Ô∏è Developer
      summary: Get developers associated with a specific label
      operationId: getDeveloperLabels
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    first:
                      type: string
                      example: Kevin
                    last:
                      type: string
                      example: Hoyt
                    nickname:
                      type: string
                      example: The Dude
                    email:
                      type: string
                      example: krhoyt@us.ibm.com
                    notes:
                      type: string
                      example: That creep can roll, man!
  /media:
    get:
      tags:
        - üñºÔ∏è Media
      summary: Read all available media
      operationId: getMedias
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - url
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    url:
                      type: string
                      example: http://something.com
                    keywords:
                      type: array
                      items:
                        type: string
                      example:
                        - eagle
                        - landed
                        - moon
    post:
      tags:
        - üñºÔ∏è Media
      summary: Create a new media reference
      operationId: createMedia
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  example: http://something.com
                keywords:
                  type: array
                  items:
                    type: string
                  example:
                    - eagle
                    - landed
                    - moon
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1media/get/responses/200/content/application~1json/\
                  schema/items"
  "/media/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired media reference
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - üñºÔ∏è Media
      summary: Read specific media reference by ID
      operationId: getMediaByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - url
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  url:
                    type: string
                    example: http://something.com
                  keywords:
                    type: array
                    items:
                      type: string
                    example:
                      - eagle
                      - landed
                      - moon
    put:
      tags:
        - üñºÔ∏è Media
      summary: Update specific media reference by ID
      operationId: updateMedia
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  example: http://something.com
                keywords:
                  type: array
                  items:
                    type: string
                  example:
                    - eagle
                    - landed
                    - moon
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1media~1%7Bid%7D/get/responses/200/content/applicat\
                  ion~1json/schema"
    delete:
      tags:
        - üñºÔ∏è Media
      summary: Delete specific media reference by ID
      operationId: deleteMediaByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/media/url/{url}":
    parameters:
      - name: url
        in: path
        description: URL field for desired media reference
        required: true
        schema:
          type: string
          example: http://something.com
    get:
      tags:
        - üñºÔ∏è Media
      summary: Read specific media reference by URL
      operationId: getMediaByURL
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - url
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  url:
                    type: string
                    example: http://something.com
                  keywords:
                    type: array
                    items:
                      type: string
                    example:
                      - eagle
                      - landed
                      - moon
  /blog:
    get:
      tags:
        - üìì Blog
      summary: Read all available blog feeds
      operationId: getBlogs
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - developer_id
                    - url
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    url:
                      type: string
                      example: http://something.com
                    feed:
                      type: string
                      example: http://something.com
    post:
      tags:
        - üìì Blog
      summary: Create a new blog feed source
      operationId: createBlog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                url:
                  type: string
                  example: http://something.com
                feed:
                  type: string
                  example: http://something.com
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1blog/get/responses/200/content/application~1json/s\
                  chema/items"
  "/blog/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired blog feed
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - üìì Blog
      summary: Read specific blog feed by ID
      operationId: getBlogByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - developer_id
                  - url
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  developer_id:
                    type: string
                    format: uuid
                  url:
                    type: string
                    example: http://something.com
                  feed:
                    type: string
                    example: http://something.com
    put:
      tags:
        - üìì Blog
      summary: Update specific blog feed by ID
      operationId: updateBlog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                url:
                  type: string
                  example: http://something.com
                feed:
                  type: string
                  example: http://something.com
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1blog~1%7Bid%7D/get/responses/200/content/applicati\
                  on~1json/schema"
    delete:
      tags:
        - üìì Blog
      summary: Delete specific blog feed by ID
      operationId: deleteBlogByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  /blog/post:
    get:
      tags:
        - üìì üìù Blog Post
      summary: Read all available blog posts
      operationId: getBlogPosts
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - blog_id
                    - published_at
                    - guid
                    - link
                    - title
                    - summary
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    blog_id:
                      type: string
                      format: uuid
                    published_at:
                      type: string
                      format: date-time
                    guid:
                      type: string
                      format: uuid
                    link:
                      type: string
                      example: http://something.com
                    title:
                      type: string
                      example: Friends
                    summary:
                      type: string
                      example: How you doin'?!
                    views:
                      type: integer
                      example: 0
                    category:
                      type: array
                      items:
                        type: string
                      example:
                        - sitcom
                        - television
                    keywords:
                      type: array
                      items:
                        type: string
                      example:
                        - natural
                        - language
                        - understanding
                    concepts:
                      type: array
                      items:
                        type: string
                      example:
                        - natural
                        - language
                        - understanding
                    entities:
                      type: array
                      items:
                        type: string
                      example:
                        - natural
                        - language
                        - understanding
    post:
      tags:
        - üìì üìù Blog Post
      summary: Create a new blog post
      operationId: createBlogPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                blog_id:
                  type: string
                  format: uuid
                published_at:
                  type: string
                  format: date-time
                guid:
                  type: string
                  format: uuid
                link:
                  type: string
                  example: http://something.com
                title:
                  type: string
                  example: Friends
                summary:
                  type: string
                  example: How you doin'?!
                views:
                  type: integer
                  example: 0
                category:
                  type: array
                  items:
                    type: string
                  example:
                    - sitcom
                    - television
                keywords:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                concepts:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                entities:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1blog~1post/get/responses/200/content/application~1\
                  json/schema/items"
  "/blog/post/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired blog feed
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - üìì üìù Blog Post
      summary: Read specific blog post by ID
      operationId: getBlogPostByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - blog_id
                  - published_at
                  - guid
                  - link
                  - title
                  - summary
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  blog_id:
                    type: string
                    format: uuid
                  published_at:
                    type: string
                    format: date-time
                  guid:
                    type: string
                    format: uuid
                  link:
                    type: string
                    example: http://something.com
                  title:
                    type: string
                    example: Friends
                  summary:
                    type: string
                    example: How you doin'?!
                  views:
                    type: integer
                    example: 0
                  category:
                    type: array
                    items:
                      type: string
                    example:
                      - sitcom
                      - television
                  keywords:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  concepts:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  entities:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
    put:
      tags:
        - üìì üìù Blog Post
      summary: Update specific blog post by ID
      operationId: updateBlogPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                blog_id:
                  type: string
                  format: uuid
                published_at:
                  type: string
                  format: date-time
                guid:
                  type: string
                  format: uuid
                link:
                  type: string
                  example: http://something.com
                title:
                  type: string
                  example: Friends
                summary:
                  type: string
                  example: How you doin'?!
                views:
                  type: integer
                  example: 0
                category:
                  type: array
                  items:
                    type: string
                  example:
                    - sitcom
                    - television
                keywords:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                concepts:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                entities:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1blog~1post~1%7Bid%7D/get/responses/200/content/app\
                  lication~1json/schema"
    delete:
      tags:
        - üìì üìù Blog Post
      summary: Delete specific blog post by ID
      operationId: deleteBlogPostByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/blog/post/guid/{id}":
    parameters:
      - name: id
        in: path
        description: GUID field for specific blog post (Base64, UTF-8)
        required: true
        schema:
          type: string
          format: byte
    get:
      tags:
        - üìì üìù Blog Post
      summary: Read specific blog post by GUID
      operationId: getBlogPostByGUID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - blog_id
                  - published_at
                  - guid
                  - link
                  - title
                  - summary
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  blog_id:
                    type: string
                    format: uuid
                  published_at:
                    type: string
                    format: date-time
                  guid:
                    type: string
                    format: uuid
                  link:
                    type: string
                    example: http://something.com
                  title:
                    type: string
                    example: Friends
                  summary:
                    type: string
                    example: How you doin'?!
                  views:
                    type: integer
                    example: 0
                  category:
                    type: array
                    items:
                      type: string
                    example:
                      - sitcom
                      - television
                  keywords:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  concepts:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  entities:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
  "/blog/post/{id}/media":
    parameters:
      - name: id
        in: path
        description: ID field for specific blog post
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - üìì üìù Blog Post
      summary: Read all available media for given blog post
      operationId: getBlogPostMedia
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - url
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    url:
                      type: string
                      example: http://something.com
                    keywords:
                      type: array
                      items:
                        type: string
                      example:
                        - eagle
                        - landed
                        - moon
    post:
      tags:
        - üìì üìù Blog Post
      summary: Create a new reference between a blog post and media
      operationId: createBlogPostMedia
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                media_id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  post_id:
                    type: string
                    format: uuid
                  media_id:
                    type: string
                    format: uuid
  /dev:
    get:
      tags:
        - üî• Dev
      summary: Read all available DEV Community accounts
      operationId: getDevCommunity
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - developer_id
                    - user_name
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    user_name:
                      type: string
                      example: boneskull
    post:
      tags:
        - üî• Dev
      summary: Create a new DEV Community account
      operationId: createDevCommunity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                user_name:
                  type: string
                  example: boneskull
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1dev/get/responses/200/content/application~1json/sc\
                  hema/items"
  "/dev/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired DEV Community account
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - üî• Dev
      summary: Read specific DEV Community account by ID
      operationId: getDevCommunityID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - developer_id
                  - user_name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  developer_id:
                    type: string
                    format: uuid
                  user_name:
                    type: string
                    example: boneskull
    put:
      tags:
        - üî• Dev
      summary: Update specific DEV Community account by ID
      operationId: updateDevCommunity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                user_name:
                  type: string
                  example: boneskull
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1dev~1%7Bid%7D/get/responses/200/content/applicatio\
                  n~1json/schema"
    delete:
      tags:
        - üî• Dev
      summary: Delete specific DEV Community account by ID
      operationId: deleteDevCommunityID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  /dev/post:
    get:
      tags:
        - üî• üìù Dev Post
      summary: Read all available DEV Community posts
      operationId: getDevCommunityPosts
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - dev_id
                    - published_at
                    - guid
                    - article_id
                    - link
                    - title
                    - summary
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    dev_id:
                      type: string
                      format: uuid
                    published_at:
                      type: string
                      format: date-time
                    guid:
                      type: string
                      format: uuid
                    article_id:
                      type: integer
                      example: 172031
                    link:
                      type: string
                      example: http://something.com
                    title:
                      type: string
                      example: Friends
                    summary:
                      type: string
                      example: How you doin'?!
                    likes:
                      type: integer
                      example: 0
                    reading:
                      type: integer
                      example: 0
                    unicorn:
                      type: integer
                      example: 0
                    keywords:
                      type: array
                      items:
                        type: string
                      example:
                        - natural
                        - language
                        - understanding
                    concepts:
                      type: array
                      items:
                        type: string
                      example:
                        - natural
                        - language
                        - understanding
                    entities:
                      type: array
                      items:
                        type: string
                      example:
                        - natural
                        - language
                        - understanding
    post:
      tags:
        - üî• üìù Dev Post
      summary: Create a new account post
      operationId: createDevCommunityPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dev_id:
                  type: string
                  format: uuid
                published_at:
                  type: string
                  format: date-time
                guid:
                  type: string
                  format: uuid
                article_id:
                  type: integer
                  example: 172031
                link:
                  type: string
                  example: http://something.com
                title:
                  type: string
                  example: Friends
                summary:
                  type: string
                  example: How you doin'?!
                likes:
                  type: integer
                  example: 0
                reading:
                  type: integer
                  example: 0
                unicorn:
                  type: integer
                  example: 0
                keywords:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                concepts:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                entities:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1dev~1post/get/responses/200/content/application~1j\
                  son/schema/items"
  "/dev/post/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired account posts
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - üî• üìù Dev Post
      summary: Read specific account post by ID
      operationId: getDevCommunityPostByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - dev_id
                  - published_at
                  - guid
                  - article_id
                  - link
                  - title
                  - summary
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  dev_id:
                    type: string
                    format: uuid
                  published_at:
                    type: string
                    format: date-time
                  guid:
                    type: string
                    format: uuid
                  article_id:
                    type: integer
                    example: 172031
                  link:
                    type: string
                    example: http://something.com
                  title:
                    type: string
                    example: Friends
                  summary:
                    type: string
                    example: How you doin'?!
                  likes:
                    type: integer
                    example: 0
                  reading:
                    type: integer
                    example: 0
                  unicorn:
                    type: integer
                    example: 0
                  keywords:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  concepts:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  entities:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
    put:
      tags:
        - üî• üìù Dev Post
      summary: Update specific account post by ID
      operationId: updateDevCommunityPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dev_id:
                  type: string
                  format: uuid
                published_at:
                  type: string
                  format: date-time
                guid:
                  type: string
                  format: uuid
                article_id:
                  type: integer
                  example: 172031
                link:
                  type: string
                  example: http://something.com
                title:
                  type: string
                  example: Friends
                summary:
                  type: string
                  example: How you doin'?!
                likes:
                  type: integer
                  example: 0
                reading:
                  type: integer
                  example: 0
                unicorn:
                  type: integer
                  example: 0
                keywords:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                concepts:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                entities:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1dev~1post~1%7Bid%7D/get/responses/200/content/appl\
                  ication~1json/schema"
    delete:
      tags:
        - üî• üìù Dev Post
      summary: Delete specific account post by ID
      operationId: deleteDevCommunityPostByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/dev/post/guid/{id}":
    parameters:
      - name: id
        in: path
        description: GUID field for specific account post (Base64, UTF-8)
        required: true
        schema:
          type: string
          format: byte
    get:
      tags:
        - üî• üìù Dev Post
      summary: Read specific account post by GUID
      operationId: getDevCommunityPostByGUID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - dev_id
                  - published_at
                  - guid
                  - article_id
                  - link
                  - title
                  - summary
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  dev_id:
                    type: string
                    format: uuid
                  published_at:
                    type: string
                    format: date-time
                  guid:
                    type: string
                    format: uuid
                  article_id:
                    type: integer
                    example: 172031
                  link:
                    type: string
                    example: http://something.com
                  title:
                    type: string
                    example: Friends
                  summary:
                    type: string
                    example: How you doin'?!
                  likes:
                    type: integer
                    example: 0
                  reading:
                    type: integer
                    example: 0
                  unicorn:
                    type: integer
                    example: 0
                  keywords:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  concepts:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  entities:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
  "/dev/post/{id}/media":
    parameters:
      - name: id
        in: path
        description: ID field for specific account post
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - üî• üìù Dev Post
      summary: Read all available media for given account post
      operationId: getDevCommunityPostMedia
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/paths/~1blog~1post~1%7Bid%7D~1media/get/responses/200/co\
                    ntent/application~1json/schema/items"
    post:
      tags:
        - üî• üìù Dev Post
      summary: Create a new reference between an account post and media
      operationId: createDevCommunityPostMedia
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                media_id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  post_id:
                    type: string
                    format: uuid
                  media_id:
                    type: string
                    format: uuid
  /medium:
    get:
      tags:
        - üîÆ Medium
      summary: Read all available Medium feeds
      operationId: getMediums
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - developer_id
                    - user_name
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    user_name:
                      type: string
                      example: boneskull
                    following:
                      type: integer
                      example: 0
                    followed_by:
                      type: integer
                      example: 0
    post:
      tags:
        - üîÆ Medium
      summary: Create a new Medium account
      operationId: createMedium
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                user_name:
                  type: string
                  example: boneskull
                following:
                  type: integer
                  example: 0
                followed_by:
                  type: integer
                  example: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1medium/get/responses/200/content/application~1json\
                  /schema/items"
  "/medium/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired Medium feed
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - üîÆ Medium
      summary: Read specific Medium feed by ID
      operationId: getMediumByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - developer_id
                  - user_name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  developer_id:
                    type: string
                    format: uuid
                  user_name:
                    type: string
                    example: boneskull
                  following:
                    type: integer
                    example: 0
                  followed_by:
                    type: integer
                    example: 0
    put:
      tags:
        - üîÆ Medium
      summary: Update specific Medium feed by ID
      operationId: updateMedium
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                user_name:
                  type: string
                  example: boneskull
                following:
                  type: integer
                  example: 0
                followed_by:
                  type: integer
                  example: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1medium~1%7Bid%7D/get/responses/200/content/applica\
                  tion~1json/schema"
    delete:
      tags:
        - üîÆ Medium
      summary: Delete specific Medium feed by ID
      operationId: deleteMediumByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  /medium/post:
    get:
      tags:
        - üîÆ üìù Medium Post
      summary: Read all available account posts
      operationId: getMediumPosts
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - medium_id
                    - published_at
                    - guid
                    - link
                    - title
                    - summary
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    medium_id:
                      type: string
                      format: uuid
                    published_at:
                      type: string
                      format: date-time
                    guid:
                      type: string
                      format: uuid
                    link:
                      type: string
                      example: http://something.com
                    title:
                      type: string
                      example: Friends
                    summary:
                      type: string
                      example: How you doin'?!
                    claps:
                      type: integer
                      example: 0
                    category:
                      type: array
                      items:
                        type: string
                      example:
                        - sitcom
                        - television
                    keywords:
                      type: array
                      items:
                        type: string
                      example:
                        - natural
                        - language
                        - understanding
                    concepts:
                      type: array
                      items:
                        type: string
                      example:
                        - natural
                        - language
                        - understanding
                    entities:
                      type: array
                      items:
                        type: string
                      example:
                        - natural
                        - language
                        - understanding
    post:
      tags:
        - üîÆ üìù Medium Post
      summary: Create a new Medium account post
      operationId: createMediumPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                medium_id:
                  type: string
                  format: uuid
                published_at:
                  type: string
                  format: date-time
                guid:
                  type: string
                  format: uuid
                link:
                  type: string
                  example: http://something.com
                title:
                  type: string
                  example: Friends
                summary:
                  type: string
                  example: How you doin'?!
                claps:
                  type: integer
                  example: 0
                category:
                  type: array
                  items:
                    type: string
                  example:
                    - sitcom
                    - television
                keywords:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                concepts:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                entities:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1medium~1post/get/responses/200/content/application\
                  ~1json/schema/items"
  "/medium/post/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired Medium post
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - üîÆ üìù Medium Post
      summary: Read specific Medium post by ID
      operationId: getMediumPostByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - medium_id
                  - published_at
                  - guid
                  - link
                  - title
                  - summary
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  medium_id:
                    type: string
                    format: uuid
                  published_at:
                    type: string
                    format: date-time
                  guid:
                    type: string
                    format: uuid
                  link:
                    type: string
                    example: http://something.com
                  title:
                    type: string
                    example: Friends
                  summary:
                    type: string
                    example: How you doin'?!
                  claps:
                    type: integer
                    example: 0
                  category:
                    type: array
                    items:
                      type: string
                    example:
                      - sitcom
                      - television
                  keywords:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  concepts:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  entities:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
    put:
      tags:
        - üîÆ üìù Medium Post
      summary: Update specific Medium post by ID
      operationId: updateMediumPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                medium_id:
                  type: string
                  format: uuid
                published_at:
                  type: string
                  format: date-time
                guid:
                  type: string
                  format: uuid
                link:
                  type: string
                  example: http://something.com
                title:
                  type: string
                  example: Friends
                summary:
                  type: string
                  example: How you doin'?!
                claps:
                  type: integer
                  example: 0
                category:
                  type: array
                  items:
                    type: string
                  example:
                    - sitcom
                    - television
                keywords:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                concepts:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                entities:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1medium~1post~1%7Bid%7D/get/responses/200/content/a\
                  pplication~1json/schema"
    delete:
      tags:
        - üîÆ üìù Medium Post
      summary: Delete specific Medium post by ID
      operationId: deleteMediumPostByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/medium/post/guid/{id}":
    parameters:
      - name: id
        in: path
        description: GUID field for specific Medium post (Base64, UTF-8)
        required: true
        schema:
          type: string
          format: byte
    get:
      tags:
        - üîÆ üìù Medium Post
      summary: Read specific Medium post by GUID
      operationId: getMediumPostByGUID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - medium_id
                  - published_at
                  - guid
                  - link
                  - title
                  - summary
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  medium_id:
                    type: string
                    format: uuid
                  published_at:
                    type: string
                    format: date-time
                  guid:
                    type: string
                    format: uuid
                  link:
                    type: string
                    example: http://something.com
                  title:
                    type: string
                    example: Friends
                  summary:
                    type: string
                    example: How you doin'?!
                  claps:
                    type: integer
                    example: 0
                  category:
                    type: array
                    items:
                      type: string
                    example:
                      - sitcom
                      - television
                  keywords:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  concepts:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  entities:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
  "/medium/post/{id}/media":
    parameters:
      - name: id
        in: path
        description: ID field for specific Medium post
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - üîÆ üìù Medium Post
      summary: Read all available media for given Medium post
      operationId: getMediumPostMedia
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/paths/~1blog~1post~1%7Bid%7D~1media/get/responses/200/co\
                    ntent/application~1json/schema/items"
    post:
      tags:
        - üîÆ üìù Medium Post
      summary: Create a new reference between a Medium post and media
      operationId: createMediumPostMedia
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                media_id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  post_id:
                    type: string
                    format: uuid
                  media_id:
                    type: string
                    format: uuid
  "/watson/language/{url}":
    parameters:
      - name: url
        in: path
        description: URL of the document to analyze (Base64, UTF-8)
        required: true
        schema:
          type: string
          format: byte
    get:
      tags:
        - üß† Watson
      summary: Use natural language understanding on a document
      operationId: getWatsonLanguage
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  keywords:
                    type: array
                    items:
                      type: string
                    example:
                      - ibm
                      - cloud
                      - devrel
                  concepts:
                    type: array
                    items:
                      type: string
                    example:
                      - ibm
                      - cloud
                      - devrel
                  entities:
                    type: array
                    items:
                      type: string
                    example:
                      - ibm
                      - cloud
                      - devrel
  "/watson/vision/{url}":
    parameters:
      - name: url
        in: path
        description: URL of the image to analyze (Base64, UTF-8)
        required: true
        schema:
          type: string
          format: byte
    get:
      tags:
        - üß† Watson
      summary: Use visual recognition on an image
      operationId: getWatsonImage
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - ibm
                  - cloud
                  - devrel
  "/utility/images/{url}":
    get:
      tags:
        - üß∞ Utliity
      summary: Extract unique images from a document (web page)
      operationId: getUtilityImages
      parameters:
        - name: url
          in: path
          description: URL of the document to scape (Base64, UTF-8)
          required: true
          schema:
            type: string
            format: byte
        - in: query
          name: accept
          required: false
          schema:
            type: string
            example: jpeg,jpg,png,tiff,gif
            default: jpeg,jpg,png,tiff,gif
          description: Accepted image types defaults to Watson supported formats
        - in: query
          name: check
          required: false
          schema:
            type: boolean
            default: true
          description: Check for valid file type against accepted types
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            default: 10
          description: Maximum size of image to classify (Mb)
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - http://something.com/bee.jpg
                  - http://something.com/whisk.png
                  - http://something.com/cat.gif
components:
  schemas:
    Label:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: IBM
    Developer:
      required:
        - first
        - last
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        first:
          type: string
          example: Kevin
        last:
          type: string
          example: Hoyt
        nickname:
          type: string
          example: The Dude
        email:
          type: string
          example: krhoyt@us.ibm.com
        notes:
          type: string
          example: That creep can roll, man!
    Media:
      required:
        - url
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        url:
          type: string
          example: http://something.com
        keywords:
          type: array
          items:
            type: string
          example:
            - eagle
            - landed
            - moon
    Blog:
      required:
        - developer_id
        - url
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        developer_id:
          type: string
          format: uuid
        url:
          type: string
          example: http://something.com
        feed:
          type: string
          example: http://something.com
    BlogPost:
      required:
        - blog_id
        - published_at
        - guid
        - link
        - title
        - summary
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        blog_id:
          type: string
          format: uuid
        published_at:
          type: string
          format: date-time
        guid:
          type: string
          format: uuid
        link:
          type: string
          example: http://something.com
        title:
          type: string
          example: Friends
        summary:
          type: string
          example: How you doin'?!
        views:
          type: integer
          example: 0
        category:
          type: array
          items:
            type: string
          example:
            - sitcom
            - television
        keywords:
          type: array
          items:
            type: string
          example:
            - natural
            - language
            - understanding
        concepts:
          type: array
          items:
            type: string
          example:
            - natural
            - language
            - understanding
        entities:
          type: array
          items:
            type: string
          example:
            - natural
            - language
            - understanding
    BlogPostMedia:
      required:
        - post_id
        - media_id
      type: object
      properties:
        id:
          type: string
          format: uuid
        uuid:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        post_id:
          type: string
          format: uuid
        media_id:
          type: string
          format: uuid
    Dev:
      required:
        - developer_id
        - user_name
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        developer_id:
          type: string
          format: uuid
        user_name:
          type: string
          example: boneskull
    DevPost:
      required:
        - dev_id
        - published_at
        - guid
        - article_id
        - link
        - title
        - summary
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        dev_id:
          type: string
          format: uuid
        published_at:
          type: string
          format: date-time
        guid:
          type: string
          format: uuid
        article_id:
          type: integer
          example: 172031
        link:
          type: string
          example: http://something.com
        title:
          type: string
          example: Friends
        summary:
          type: string
          example: How you doin'?!
        likes:
          type: integer
          example: 0
        reading:
          type: integer
          example: 0
        unicorn:
          type: integer
          example: 0
        keywords:
          type: array
          items:
            type: string
          example:
            - natural
            - language
            - understanding
        concepts:
          type: array
          items:
            type: string
          example:
            - natural
            - language
            - understanding
        entities:
          type: array
          items:
            type: string
          example:
            - natural
            - language
            - understanding
    DevPostMedia:
      required:
        - post_id
        - media_id
      type: object
      properties:
        id:
          type: string
          format: uuid
        uuid:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        post_id:
          type: string
          format: uuid
        media_id:
          type: string
          format: uuid
    Medium:
      required:
        - developer_id
        - user_name
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        developer_id:
          type: string
          format: uuid
        user_name:
          type: string
          example: boneskull
        following:
          type: integer
          example: 0
        followed_by:
          type: integer
          example: 0
    MediumPost:
      required:
        - medium_id
        - published_at
        - guid
        - link
        - title
        - summary
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        medium_id:
          type: string
          format: uuid
        published_at:
          type: string
          format: date-time
        guid:
          type: string
          format: uuid
        link:
          type: string
          example: http://something.com
        title:
          type: string
          example: Friends
        summary:
          type: string
          example: How you doin'?!
        claps:
          type: integer
          example: 0
        category:
          type: array
          items:
            type: string
          example:
            - sitcom
            - television
        keywords:
          type: array
          items:
            type: string
          example:
            - natural
            - language
            - understanding
        concepts:
          type: array
          items:
            type: string
          example:
            - natural
            - language
            - understanding
        entities:
          type: array
          items:
            type: string
          example:
            - natural
            - language
            - understanding
    MediumPostMedia:
      required:
        - post_id
        - media_id
      type: object
      properties:
        id:
          type: string
          format: uuid
        uuid:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        post_id:
          type: string
          format: uuid
        media_id:
          type: string
          format: uuid
